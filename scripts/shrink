#!/bin/bash
set -e # Exit immediately if a command exits with a non-zero status

if [ -z "$1" ] || [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
  >&2 echo "Usage: $(basename "$0") Image"
  exit 1
fi

# --- Dependency Check for pishrink.sh ---
if ! command -v pishrink.sh &> /dev/null; then
  echo "pishrink.sh not found. Attempting to install..."
  PISHRINK_URL="https://raw.githubusercontent.com/Drewsif/PiShrink/master/pishrink.sh"
  # Download the script and pipe it to the 'install' command
  if curl -sL "${PISHRINK_URL}" | sudo install /dev/stdin /usr/local/bin/pishrink.sh; then
    echo "pishrink.sh installed successfully to /usr/local/bin."
  else
    echo "Failed to install pishrink.sh. Please install it manually." >&2
    exit 1
  fi
fi

IMAGE_FILE="$1"

# --- PHASE 1: Modify the image inside a self-contained subshell ---
(
  MOUNT_POINT="/mnt/image_root"
  LOOP_DEVICE=""

  # This cleanup function is local to the subshell
  cleanup() {
    echo "--- Cleaning up modification phase ---"
    if mountpoint -q "${MOUNT_POINT}"; then
      sudo umount "${MOUNT_POINT}"
    fi
    if [ -n "${LOOP_DEVICE}" ]; then
      sudo losetup -d "${LOOP_DEVICE}"
    fi
  }

  trap cleanup EXIT

  echo "--- Modifying image ---"
  LOOP_DEVICE=$(sudo losetup -fP --show "${IMAGE_FILE}")
  ROOT_PARTITION="${LOOP_DEVICE}p2"

  sudo mkdir -p "${MOUNT_POINT}"
  sudo mount "${ROOT_PARTITION}" "${MOUNT_POINT}"

  # Inject the self-expanding service for Arch Linux
  echo "Installing one-shot resize service..."
  # Create the script file
  sudo tee "${MOUNT_POINT}/usr/local/sbin/resize-fs-once.sh" > /dev/null <<'EOF'
#!/bin/bash
fdisk /dev/mmcblk0 <<END
d
2
n
p
2


N
w
END
partprobe /dev/mmcblk0
resize2fs /dev/mmcblk0p2
systemctl disable resize-fs-once.service
rm /etc/systemd/system/resize-fs-once.service
rm /usr/local/sbin/resize-fs-once.sh
rm -f /etc/rc.local
EOF

  # Create the service file
  sudo tee "${MOUNT_POINT}/etc/systemd/system/resize-fs-once.service" > /dev/null <<'EOF'
[Unit]
Description=Resize Root Filesystem Once
[Service]
Type=oneshot
ExecStart=/usr/local/sbin/resize-fs-once.sh
[Install]
WantedBy=multi-user.target
EOF

  # Make the script executable
  sudo chmod +x "${MOUNT_POINT}/usr/local/sbin/resize-fs-once.sh"

  # Enable the service by creating the symlink
  sudo ln -s /etc/systemd/system/resize-fs-once.service "${MOUNT_POINT}/etc/systemd/system/multi-user.target.wants/resize-fs-once.service"

  # Remove the machine-id to generalize the image
  if [ -f "${MOUNT_POINT}/etc/machine-id" ]; then
    echo "Removing existing machine-id..."
    sudo rm "${MOUNT_POINT}/etc/machine-id"
    sudo touch "${MOUNT_POINT}/etc/machine-id"
  fi

  if [ -d "${MOUNT_POINT}/opt/diretta-alsa-target" ]; then
    dl=$(find "${MOUNT_POINT}/opt/diretta-alsa-target" ! -name 'diretta*')
    if [ -n "${dl}" ]; then
      echo "- Diretta License File Found."
      sudo mv -v "${dl}" "${IMAGE_FILE%.img}".lic
    fi
  fi
) # The subshell now exits, and its trap automatically cleans up mounts/loops.


# --- PHASE 2: Shrink the fully prepared and unmounted image ---
echo "--- Shrinking image ---"
sudo pishrink.sh "${IMAGE_FILE}"

echo "Image is now prepared and ready to be compressed."
