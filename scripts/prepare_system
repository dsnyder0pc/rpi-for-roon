#!/bin/bash

# ==============================================================================
#         Remote System Preparation & Shutdown Script (v5 - with Diretta)
#
# Meant to be run with a command that first clears the calling user's history:
# history -c; rm -f ~/.bash_history; export HISTSIZE=0; curl -fsSL https://raw.githubusercontent.com/dsnyder0pc/rpi-for-roon/refs/heads/main/scripts/prepare_system | sudo bash
# ==============================================================================

# --- Configuration ---
TARGET_USER="audiolinux"
MIRRORLIST_PATH="/etc/pacman.d/mirrorlist"
DEFAULT_MIRROR="http://mirror.archlinuxarm.org/\$arch/\$repo"
CUSTOM_MIRROR="http://ca.us.mirror.archlinuxarm.org/\$arch/\$repo"

# --- Script Start ---
# --- Add color variables right after configuration ---
# --- Colors ---
RED_BOLD='\033[1;31m'
NC='\033[0m' # No Color

if [[ $EUID -ne 0 ]]; then
   echo "🛑 Error: This script must be run with root privileges."
   exit 1
fi

echo "🚀 Starting remote system preparation..."
echo "------------------------------------------------"

# Step 1: Remove personal SSH public key
SSH_KEYS_FILE="/home/$TARGET_USER/.ssh/authorized_keys"
echo "🔐 Removing SSH public key for user '$TARGET_USER'..."
if [ -f "$SSH_KEYS_FILE" ]; then
    rm -fv "$SSH_KEYS_FILE"
else
    echo "   - No authorized_keys file found. Skipping."
fi

# ---

# Step 2: Restore default pacman mirrorlist
echo "🌐 Restoring default pacman mirrorlist..."
if [ -f "$MIRRORLIST_PATH" ]; then
    sed -i "s|# *Server = ${DEFAULT_MIRROR}|Server = ${DEFAULT_MIRROR}|" "$MIRRORLIST_PATH"
    echo "   - Enabled default Geo-IP mirror."
    sed -i "s|^Server = ${CUSTOM_MIRROR}|# Server = ${CUSTOM_MIRROR}|" "$MIRRORLIST_PATH"
    echo "   - Disabled custom California mirror."
else
    echo "   - ⚠️  Warning: Mirrorlist file not found at '$MIRRORLIST_PATH'."
fi

echo "------------------------------------------------"

# Step 3: Remove Roon Unique Identifiers
echo "🧹 Removing Roon Bridge ID..."
rm -fv /var/roon/RoonBridge/Settings/unique_id
echo "🧹 Removing RAAT Server ID..."
rm -fv /var/roon/RAATServer/Settings/unique_id
echo "🧹 Removing Roon IR Remote Extension Token..."
rm -fv "/home/audiolinux/roon-ir-remote/.roon-token"

echo "------------------------------------------------"

# ... (previous steps remain the same)

# Step 4: Extract Diretta Target Information
echo "🔗 Extracting Diretta Target Information..."
DIRETTA_APP="/opt/diretta-alsa-target/diretta_app_activate"
if [ -f "$DIRETTA_APP" ]; then
    echo "   - Found Diretta application, generating link..."
    # Execute the app and capture the full URL
    ACTIVATION_URL=$($DIRETTA_APP)
    # Use sed to extract the hash value from the URL
    HASH_ID=$(echo "$ACTIVATION_URL" | sed -n 's/.*hash=\([^&]*\).*/\1/p')

    echo ""
    echo "================================================"
    echo -e "${RED_BOLD}   !!! COPY THIS DIRETTA INFORMATION NOW !!!${NC}"
    echo "================================================"
    echo "Purchase Link: $ACTIVATION_URL"
    echo "Hardware ID:   $HASH_ID"
    echo "================================================"
    echo ""
else
    echo "   - Diretta application not found. Skipping."
fi

echo "------------------------------------------------"

# Step 5: Clean up root's Bash history
echo "🧹 Cleaning up root user's Bash history..."
history -c
if [ -f "$HOME/.bash_history" ]; then
    cat /dev/null > "$HOME/.bash_history"
    echo "   - Cleared history file for user 'root'."
fi
export HISTSIZE=0
echo "   - History disabled for this session."
echo "------------------------------------------------"

# Step 6: Sync disks and power off the system
echo "✅ Preparation complete. System will power off in 5 seconds."
sleep 5
sync
echo "🔌 Powering off now. Goodbye!"
poweroff
