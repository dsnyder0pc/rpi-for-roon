#!/bin/bash
#
# purist-mode: A script to optimize the system for critical listening by minimizing
#              background processes.
#
# This script will invoke 'sudo' internally for commands requiring elevation.
#

# --- Configuration ---
NSSWITCH_CONF="/etc/nsswitch.conf"
BACKUP_FILE="${NSSWITCH_CONF}.purist-bak"

# --- Functions ---

# Function to activate Purist Mode
activate_mode() {
    echo "🚀 Activating Purist Mode..."

    # Stop services
    sudo systemctl stop chronyd &>/dev/null

    # Conditionally manage Argon ONE fan/service
    if sudo systemctl is-active --quiet argononed.service; then
        echo "  -> Stopping Argon One daemon (argononed.service)..."
        sudo systemctl stop argononed.service &>/dev/null
        echo "  -> Setting Argon ONE fan to 0 RPM..."
        sudo /usr/bin/i2cset -y 1 0x1a 0 &>/dev/null
    fi

    # Create backup file before making changes
    sudo cp "$NSSWITCH_CONF" "$BACKUP_FILE"
    # Modify config files and network state
    sudo sed -i -E 's/^(hosts:).*/\1 files myhostname/' "$NSSWITCH_CONF"
    sudo ip route del default &>/dev/null

    echo ""
    echo "✅ Purist Mode is ACTIVE."
}

# Function to revert changes
revert_mode() {
    # Idempotency check
    if [ ! -f "$BACKUP_FILE" ]; then
        echo "✅ System is already in standard operation mode."
        exit 0
    fi

    echo "⏪ Reverting to Standard Mode..."

    # Restore network and DNS configuration.
    sudo systemctl restart systemd-networkd &>/dev/null
    sudo mv "$BACKUP_FILE" "$NSSWITCH_CONF"

    # Always restart services when this script is called.
    echo "  -> Restarting services..."
    sudo systemctl start chronyd &>/dev/null
    if sudo systemctl -q is-enabled argononed.service; then
         sudo systemctl start argononed.service &>/dev/null
    fi

    echo ""
    echo "✅ Purist Mode DISABLED. System is in standard operation mode."
}

# --- Main Script Logic ---

# Failsafe check to prevent running on the wrong machine.
if (( $(ip -br addr | wc -l) > 2 )); then
    echo -e "\n\e[1;31mERROR: Detected multiple network interfaces.\e[0m" >&2
    echo "This script is designed for the single-interface 'Diretta Target' ONLY." >&2
    exit 1
fi

# Check for `sudo` availability
if ! command -v sudo &> /dev/null; then
    echo "Error: 'sudo' command not found. This script requires sudo to run."
    exit 1
fi

# Sudo prompt logic for interactive sessions
if [ "$EUID" -ne 0 ]; then
    echo "This script requires sudo privileges. You may be prompted for a password."
    echo "(Note: The default sudo password for Audiolinux is 'audiolinux0')"
    sudo -v || exit 1
fi

# Parse arguments
if [[ "$1" == "--revert" || "$1" == "-r" ]]; then
    revert_mode
else
    if [ -f "$BACKUP_FILE" ]; then
        echo "✅ Purist Mode is already active."
        exit 0
    fi
    activate_mode
fi

exit 0

